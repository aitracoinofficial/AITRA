policy_module(aitra, 1.100.1)

########################################
#
# Declarations
#

type aitra_t;
type aitra_exec_t;
init_daemon_domain(aitra_t, aitra_exec_t)

permissive aitra_t;

type aitra_initrc_exec_t;
init_script_file(aitra_initrc_exec_t)

type aitra_conf_t;
files_type(aitra_conf_t)

type aitra_var_lib_t;
files_type(aitra_var_lib_t)

type aitra_var_run_t;
files_type(aitra_var_run_t)

type aitra_port_t;
corenet_port(aitra_port_t)

########################################
#
# aitra local policy
#
allow aitra_t self:process { fork };

allow aitra_t self:fifo_file rw_fifo_file_perms;
allow aitra_t self:unix_stream_socket create_stream_socket_perms;

manage_dirs_pattern(aitra_t, aitra_conf_t, aitra_conf_t)
manage_files_pattern(aitra_t, aitra_conf_t, aitra_conf_t)

manage_dirs_pattern(aitra_t, aitra_var_lib_t, aitra_var_lib_t)
manage_files_pattern(aitra_t, aitra_var_lib_t, aitra_var_lib_t)
files_var_lib_filetrans(aitra_t, aitra_var_lib_t, { dir file })

manage_dirs_pattern(aitra_t, aitra_var_run_t, aitra_var_run_t)
manage_files_pattern(aitra_t, aitra_var_run_t, aitra_var_run_t)

sysnet_dns_name_resolve(aitra_t)
corenet_all_recvfrom_unlabeled(aitra_t)

allow aitra_t self:tcp_socket create_stream_socket_perms;
corenet_tcp_sendrecv_generic_if(aitra_t)
corenet_tcp_sendrecv_generic_node(aitra_t)
corenet_tcp_sendrecv_all_ports(aitra_t)
corenet_tcp_bind_generic_node(aitra_t)

gen_require(`
    type aitra_port_t;
')
allow aitra_t aitra_port_t:tcp_socket name_bind;

gen_require(`
    type aitra_port_t;
')
allow aitra_t aitra_port_t:tcp_socket name_connect;

domain_use_interactive_fds(aitra_t)

files_read_etc_files(aitra_t)

miscfiles_read_localization(aitra_t)

sysnet_dns_name_resolve(aitra_t)

allow aitra_t aitra_exec_t:file execute_no_trans;
allow aitra_t self:process setsched;
corecmd_exec_ls(aitra_t)
corenet_tcp_connect_http_port(aitra_t)
dev_read_urand(aitra_t)
fs_getattr_xattr_fs(aitra_t)
kernel_read_system_state(aitra_t)
